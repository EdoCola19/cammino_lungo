grafo.degree() non orientato, numero di archi per nodo
se faccio dict(grafo.degree()), mi crea un dizionario nodo: grado
grafo.out_degree() numero archi uscenti
grafo.in_degree() num archi entranti
archi_ordinati = sorted(grafo.edges(data=True), key=lambda x: x[2]["weight"], reverse=True)
for u, v, d in archi_ordinati:
    print(f"{u} - {v}: {d['weight']}")


PER I VICINI:
list(grafo.neighbors(nodo)) per i vicini di un nodo


G = nx.DiGraph()
# Trova i nodi con in_degree == 0
nodi_zero_entranti = [n for n in G.nodes if G.in_degree(n) == 0]

# Trova quello con massimo out_degree tra questi
nodo_target = max(nodi_zero_entranti, key=lambda n: G.out_degree(n), default=None)
